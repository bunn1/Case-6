<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- <link rel="stylesheet" href="/public/styles/style.css"> -->
  <link rel="stylesheet" href="../public/styles/main.css">
  <title>Start</title>

  <!-- <link rel="stylesheet" href="styles/styles.css"> -->
  <!-- FIX FOR FAVICON.ICO -->
  <link rel="shortcut icon" href="#">
</head>

<body>

  <!-- Header -->
  <%- include('partials/header.ejs') %>


  <% events.forEach(event => { %>
  <h2><%= event.title %></h2>
  <p><%= event.date %> </p>
  <% }) %>


  <div id="changeWeek">
    <ion-icon name="chevron-back-outline"></ion-icon>
    <div id="currentWeek">20</div>
    <ion-icon name="chevron-forward-outline"></ion-icon>
  </div>

  <div class="parent">

    <div class="oneDay">
      <h2>MONDAY</h2>
      <ul class="day-card">
        <p> Title </p>
        <li class="event-card">
          <p class="event-title">title</p>
          <p class="event-date">date</p>
        </li>
      </ul>
    </div>

    <div class="oneDay">
      <h2>TUESDAY</h2>
      <ul class="day-card active">
        <p> Title </p>
        <li class="event-card">
          <p class="event-title">title</p>
          <p class="event-date">date</p>
        </li>
      </ul>
    </div>

    <div class="oneDay">
      <h2>WEDNESDAY</h2>
      <ul class="day-card">
        <p> Title </p>
        <li class="event-card">
          <p class="event-title">title</p>
          <p class="event-date">date</p>
        </li>
      </ul>
    </div>

    <div class="oneDay">
      <h2>THURSDAY</h2>
      <ul class="day-card">
        <p> Title </p>
        <li class="event-card">
          <p class="event-title">title</p>
          <p class="event-date">date</p>
        </li>
      </ul>
    </div>

    <div class="oneDay">
      <h2>FRIDAY</h2>
      <ul class="day-card">
        <p> Title </p>
        <li class="event-card">
          <p class="event-title">title</p>
          <p class="event-date">date</p>
        </li>
      </ul>
    </div>

    <div class="oneDay">
      <h2>SATURDAY</h2>
      <ul class="day-card">
        <p> Title </p>
        <li class="event-card">
          <p class="event-title">title</p>
          <p class="event-date">date</p>
        </li>
      </ul>
    </div>  

    <div class="oneDay">
      <h2>SUNDAY</h2>
      <ul class="day-card">
        <p> Title </p>
        <li class="event-card">
          <p class="event-title">title</p>
          <p class="event-date">date</p>
        </li>
      </ul>
    </div>


    <form action="/index" method="POST">
      <label for="title">Event</label>
      <input type="text" name="title" id="title">
      <label for="date">Date And Time</label>
      <input type="text" name="date" id="date">
      <button type="submit">Create</button>
      <% locals.events.forEach(ele => { %>
      <%- ele.title %> <%- ele.date %>
      <button onclick="deleteEvent(<%= ele.id %>)">Delete</button>
      <button class="edit-button" id="<%= events.id %>" data-id="<%= events.id %>">Edit</button>
      <% }) %>
    </form>

    <!-- <button type="submit">Add event</button> -->
  </div>

  </div>


  <!-- function getWeekDates(date) {
    let d = new Date(date);
    let dayOfWeek = d.getDay();
    let preDays = -dayOfWeek;
    let postDays = 7 + preDays;
    
    //array av datum som är i början
    let dates = [];
    d.setDate(d.getDate() + preDays);
    for (let i = preDays; i < postDays; i++) {
    d.setDate(d.getDate() + 1);
    let yyyymmdd = d.toLocaleDateString();
    dates.push(yyyymmdd);
    }
    
    return dates;
    } -->


  <!-- Footer -->
  <%- include('partials/footer.ejs') %>

  //
  <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
  <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>

  <script>

    async function deleteEvent(id) {
      console.log("Hello deleteEvent", id)
      const response = await fetch(`/index/${id}`, {
        method: "delete"
      });
  
      if (response.redirected) {
        window.location.href = response.url;

      }
   
    }

    async function handleEdit(evt) {
        const id = Number(evt.target.dataset.id); // data-id -> dataset.id
        const container = evt.target.parentElement;
        const title = container.querySelector(".event-title");
        const date = container.querySelector(".event-date");
        // if not editable make them editable
        if (!title.isContentEditable && !date.isContentEditable) {
          title.contentEditable = true;
          date.contentEditable = true;
          // clicking the same button should save the changes
          evt.target.innerText = "Save";
        } else {
          // Second time clicked it should save changes
          // reset element to be non editable
          title.contentEditable = false;
          date.contentEditable = false;
          evt.target.innerText = "Edit";
          // Look at values of authorEl and quoteEl and submit new quote
          const newEvent = {
            title: title.innerText,
            date: date.innerText,
          };
          const response = await fetch(`/events/${id}`, {
            method: "put",
            body: JSON.stringify(newEvent),
            headers: {
              "Content-Type": "application/json",
            },
          });
          
          // Check if there is a redirect to follow the new url
          if (response.redirected) {
            window.location.href = response.url;
          }
        }
      }
      document
        .querySelectorAll(".edit-button")
        .forEach((btn) => (btn.onclick = handleEdit));

  </script>


</body>

</html>